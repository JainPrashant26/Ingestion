{
	"name": "az_sql_adls_ingestion_bulk",
	"properties": {
		"description": "Copy huge amount of data in bulk from database using external configuration file to store source tables in ADLS Gen2.",
		"activities": [
			{
				"name": "lookup_config_file",
				"description": "This activity will try to lookup for any config files provided.",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:03:00",
					"retry": 1,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "ds_json",
						"type": "DatasetReference",
						"parameters": {
							"ls_adls_account_name": {
								"value": "@pipeline().parameters.config_act_ls_adls_account_name",
								"type": "Expression"
							},
							"container": {
								"value": "@pipeline().parameters.config_file_container",
								"type": "Expression"
							},
							"file_path": {
								"value": "@pipeline().parameters.config_file_path",
								"type": "Expression"
							},
							"file_name": {
								"value": "@pipeline().parameters.config_file_name",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "for_each_config",
				"description": "This activity will iterate over the copy activity inside.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "lookup_config_file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('lookup_config_file').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "copy_sql_to_adls",
							"description": "This activity copies data from azure sql server and writes to azure data lake storage.",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Generate Output file name",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Generate Output file path",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:03:00",
								"retry": 1,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"additionalColumns": [
										{
											"name": "ingest_ts",
											"value": {
												"value": "@formatDateTime(utcnow(),'yyyy-MM-dd HH:mm:ss')",
												"type": "Expression"
											}
										},
										{
											"name": "ingest_exec_ts",
											"value": {
												"value": "@formatDateTime(pipeline().TriggerTime,'yyyy-MM-dd HH:mm:ss')",
												"type": "Expression"
											}
										},
										{
											"name": "ingest_pipeline_name",
											"value": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										},
										{
											"name": "ingest_pipeline_run_id",
											"value": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											}
										}
									],
									"sqlReaderQuery": {
										"value": "select @{item().source.select_name_list} from @{item().source.table_name} \nwhere @{item().source.additional_terms}",
										"type": "Expression"
									},
									"queryTimeout": {
										"value": "@{item().source.query_timeout}",
										"type": "Expression"
									},
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_az_sql",
									"type": "DatasetReference",
									"parameters": {
										"ls_keyvault_name": {
											"value": "@pipeline().parameters.src_ls_keyvault_name",
											"type": "Expression"
										},
										"ls_sql_conn_secret_name": {
											"value": "@pipeline().parameters.src_ls_sql_conn_secret_name",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ds_parquet",
									"type": "DatasetReference",
									"parameters": {
										"ls_adls_account_name": {
											"value": "@pipeline().parameters.sink_ls_adls_account_name",
											"type": "Expression"
										},
										"container": {
											"value": "@pipeline().parameters.sink_container_name",
											"type": "Expression"
										},
										"file_path": {
											"value": "@variables('output_file_path')",
											"type": "Expression"
										},
										"file_name": {
											"value": "@variables('output_file_name')",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Generate Output file name",
							"description": "This activity is used for naming output file.",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "output_file_name",
								"value": {
									"value": "@concat(item().sink.file_name,'_', item().source.table_name,'_',item().source.query_num,'_',substring(pipeline().TriggerTime,0,4),'-',substring(pipeline().TriggerTime,5,2),'-',substring(pipeline().TriggerTime,8,2),'-',substring(pipeline().TriggerTime,11,2),'-',substring(pipeline().TriggerTime,14,2),'-',substring(pipeline().TriggerTime,17,2),'.parquet')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Generate Output file path",
							"description": "This activity is to provide output file path.",
							"type": "SetVariable",
							"dependsOn": [],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "output_file_path",
								"value": {
									"value": "@concat(\n\npipeline().parameters.sink_file_path,\n\n'/Year=',substring(pipeline().TriggerTime,0,4),\n\n'/Month=',substring(pipeline().TriggerTime,5,2), \n\nif(or(equals(toLower(pipeline().parameters.partition_level), 'day'), equals(toLower(pipeline().parameters.partition_level), 'week')) ,\nconcat('/Day=', substring(pipeline().TriggerTime,8,2)),''), \n\nif(equals(toLower(pipeline().parameters.partition_level), 'hour'), \nconcat('/Day=', substring(pipeline().TriggerTime,8,2), '/Hour=',substring(pipeline().TriggerTime,11,2)), ''),\n\nif(equals(toLower(pipeline().parameters.partition_level), 'minute'), \nconcat('/Day=', substring(pipeline().TriggerTime,8,2), '/Hour=',substring(pipeline().TriggerTime,11,2), '/Minute=', substring(pipeline().TriggerTime,14,2)), '')\n\n, '/'\n\n)\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"config_act_ls_adls_account_name": {
				"type": "string",
				"defaultValue": "meusdlsdevcptgbatch"
			},
			"config_file_container": {
				"type": "string",
				"defaultValue": "config"
			},
			"config_file_path": {
				"type": "string",
				"defaultValue": "l0_config/az_sql_bulk"
			},
			"config_file_name": {
				"type": "string",
				"defaultValue": "dbo_customers_config.json"
			},
			"src_ls_keyvault_name": {
				"type": "string",
				"defaultValue": "meus-kv-dev-cptgbatch"
			},
			"src_ls_sql_conn_secret_name": {
				"type": "string",
				"defaultValue": "azure-sql-db-connection-string-dev"
			},
			"sink_ls_adls_account_name": {
				"type": "string",
				"defaultValue": "meusdlsdevcptgbatch"
			},
			"sink_container_name": {
				"type": "string",
				"defaultValue": "raw"
			},
			"sink_file_path": {
				"type": "string",
				"defaultValue": "output_folder/az_sql_bulk_parquet"
			},
			"partition_level": {
				"type": "string",
				"defaultValue": "day"
			}
		},
		"variables": {
			"output_file_name": {
				"type": "String"
			},
			"output_file_path": {
				"type": "String"
			}
		},
		"folder": {
			"name": "az_sql_source_ingestion"
		},
		"annotations": [],
		"lastPublishTime": "2023-08-16T09:42:01Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}